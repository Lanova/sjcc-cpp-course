#include <iostream>using namespace std; // ======================================================================// Function:      index_of_min// Purpose:       return the index of the smallest number in a[start_num] to//                      a[last_index]// Assumptions://          (1) last_index >= start_index// Parameters://          (1) a[]           - an array of numbers//          (2) start_index   - the first index to start the search//          (3) last_index    - the last index to end the search// ======================================================================int index_of_min(const int a[], int start_index, int last_index);// ======================================================================// Function:      swap// Purpose:       swap the value of a & b// ======================================================================void swap(int& a, int& b);int main() {const int ARRAY_SIZE = 6;//int score[] = {-12, 4, 16, 0, 3, -4};int score[] = {12, 4, 16, 0, 13, -4};//int score[] = {42, 41, 16, 10, 3, -4};//int score[] = {-1, 0, 1, 2, 3, 4};int partition_index;    // first of unsorted section//          1. Start at partition_index = 0
                                        //          2. Find min from num[partition_index] to num[last_index] //                (index_of_min)//          3. Swap num[partition_index] and num[index_of_min]//                (swap)//          4. partition_index++//          5. Repeart step 2 to 4 until partition_index = last_indexfor (int partition_index=0; partition_index<ARRAY_SIZE; partition_index++) {swap(score[partition_index], score[index_of_min(score, partition_index,ARRAY_SIZE-1)]);}//cout << score[index_of_min(score, 0, ARRAY_SIZE-1)] << endl;;// Output sorted arrayfor (int i=0; i<ARRAY_SIZE; i++) {cout << score[i] << endl;}return 0;}int index_of_min(const int a[], int start_index, int last_index) {assert(start_index <= last_index);int min = a[start_index];int index_min = start_index;for (int i=start_index+1; i<=last_index; i++) {if (min > a[i]) {min = a[i];index_min = i;}}return index_min;}void swap(int& a, int& b) {int temp = a;a = b;b = temp;}